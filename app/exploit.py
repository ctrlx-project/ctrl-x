from pymetasploit3.msfrpc import MsfRpcClient
from pymetasploit3.msfconsole import MsfRpcConsole
from typing import Dict, List
import time

class MSFManager:
    def __init__(self):
        """Initializes the attributes of the Metasploit Manager."""
        self.console_buffer = list()
        self.console_busy = False
        self.client = MsfRpcClient("yourpassword", ssl=False)
        self.console = MsfRpcConsole(self.client, cb=self.read_console)

    def clear_buffer(self):
        """Erases the console buffer."""
        self.console_buffer = []

    def read_console(self, console_data: dict):
        """Reads the data on the console.

        Args:
            console_data (dict): The data output by the console.
        """
        self.console_busy = console_data['busy']
        data = console_data['data'].rstrip().split('\n')
        for line in data:
            self.console_buffer.append(line)
        self.console_busy = False

    def search_cve_module(self, cve: str) -> List[Dict]:
        """Gets the name of the module based on the CVE.

        Args:
            cve (str): The name of the CVE to be searched.

        Returns:
            (List[Dict]): A list of findings.
        """
        self.clear_buffer()
        self.console_busy = True
        self.console.execute(f"search {cve}")
        while self.console_busy:
            time.sleep(1)
        results = []
        for finding in self.console_buffer[6:-3]:
            finding = finding.split()
            results.append({
                'name':finding[1],
                'disclosure_date':finding[2],
                'rank':finding[3],
                'check':finding[4],
                'description':finding[5]
            })
        self.clear_buffer()
        return results


a = MSFManager()
print(a.search_cve_module("CVE-2008-4250"))
exit()